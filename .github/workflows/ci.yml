name: Tarea Automatizada de ejecuciÃ³n de pruebas

env:
  SONAR_ORG: 'edwardapaza'
  SONAR_PROJECT: 'edwardapaza_bddreporte'
  DB_HOST: '161.132.49.95'
  DB_PORT: '3306'
  DB_USER: 'escobar'
  DB_PASS: 'Upt2024'
  DB_NAME: 'sis_venta_test'

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo_mysql, xdebug

      - name: Install Composer dependencies
        run: composer install

      - name: Create reports directory
        run: mkdir -p features/bootstrap/reports build/logs build/coverage coveragereport

      - name: Give execute permission to Behat and PHPUnit
        run: |
          chmod +x vendor/bin/behat
          chmod +x vendor/bin/phpunit

      - name: Check Database Connection
        run: |
          sudo apt-get install -y mariadb-client
          mysql --host=${{ env.DB_HOST }} --port=${{ env.DB_PORT }} --user=${{ env.DB_USER }} --password=${{ env.DB_PASS }} --execute="SHOW DATABASES;"

      - name: Run Behat tests
        run: vendor/bin/behat --format=html --out=features/bootstrap/reports/index.html

      - name: Generate HTML Coverage Report
        run: |
          php -d xdebug.mode=coverage -d xdebug.start_with_request=yes vendor/bin/phpunit --configuration phpunit.xml --coverage-html build/coverage
          echo "Contents of build/coverage directory:"
          ls -la build/coverage
          if [ -d build/coverage ]; then
            echo "HTML Coverage report generated successfully."
          else
            echo "HTML Coverage report not found."
            exit 1
          fi

      - name: Generate Clover Coverage Report
        run: |
          php -d xdebug.mode=coverage -d xdebug.start_with_request=yes vendor/bin/phpunit --configuration phpunit.xml --coverage-clover build/logs/clover.xml
          echo "Contents of build/logs directory:"
          ls -la build/logs
          if [ -f build/logs/clover.xml ]; then
            echo "Clover Coverage report generated successfully."
          else
            echo "Clover Coverage report not found."
            exit 1
          fi

      - name: Install .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Generate Markdown Coverage Summary
        run: |
          ~/.dotnet/tools/reportgenerator -reports:build/logs/clover.xml -targetdir:coveragereport -reporttypes:MarkdownSummary
          echo "Contents of coveragereport directory:"
          ls -la coveragereport
          if [ -f coveragereport/Summary.md ]; then
            echo "Markdown Summary report generated successfully."
          else
            echo "Markdown Summary report not found."
            exit 1
          fi

      - name: Publish coverage in build summary
        run: cat coveragereport/Summary.md >> $GITHUB_STEP_SUMMARY
        shell: bash

      - name: Upload HTML Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: html-coverage-report
          path: build/coverage

      - name: Upload Coverage Summary
        uses: actions/upload-artifact@v2
        with:
          name: coverage-summary
          path: coveragereport/Summary.md

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload Behat HTML report
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: behat-report
          path: features/bootstrap/reports/index.html

      - name: Deploy Behat HTML report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.PAT_TOKEN }}
          publish_branch: bddreporte
          publish_dir: features/bootstrap/reports
